name: Build
on:
  push:
    branches:
      - branch-zero
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Build Project
        run: .\src\build.ps1
        shell: powershell

      #- name: Set up JDK 11
      #  uses: actions/setup-java@v1
      #  with:
      #    java-version: 1.11
      #- uses: actions/checkout@v2
      #  with:
      #    fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      #- name: Cache SonarCloud packages
      #  uses: actions/cache@v1
      #  with:
      #    path: ~\sonar\cache
      #    key: ${{ runner.os }}-sonar
      #    restore-keys: ${{ runner.os }}-sonar
      #- name: Cache SonarCloud scanner
      #  id: cache-sonar-scanner
      #  uses: actions/cache@v1
      #  with:
      #    path: .\.sonar\scanner
      #    key: ${{ runner.os }}-sonar-scanner
      #    restore-keys: ${{ runner.os }}-sonar-scanner
      #- name: Install SonarCloud scanner
      #  if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      #  shell: powershell
      #  run: |
      #    New-Item -Path .\.sonar\scanner -ItemType Directory
      #    dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      #- name: Test, Build and analyze
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #  shell: powershell
      #  run: |
      #    dotnet test .\src\Monitor.sln --collect:"XPlat Code Coverage" --settings .\src\MongoDbMonitorTest\runsettings.xml
      #    dotnet build-server shutdown
      #    .\.sonar\scanner\dotnet-sonarscanner begin /k:"MirzaMerdovic_zap" /o:"mimme" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="src/MongoDbMonitorTest/TestResults/*/coverage.opencover.xml" /d:sonar.coverage.exclusions="**Test*.cs"
      #    dotnet build .\src\Monitor.sln
      #    .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
