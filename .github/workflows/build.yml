name: Build
on:
  push:
    branches:
      - branch-zero
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path /.sonar/scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Set PR build number
        id: PRNUMBER
        if: ${{ github.event_name == 'pull_request' }}
        uses: kkak10/pr-number-action@v1.3

      - name: Sonar Begin
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: >
          ./.sonar/scanner/dotnet-sonarscanner begin
          /k:"MirzaMerdovic_zap"
          /o:"mimme"
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="https://sonarcloud.io"
          /d:sonar.cs.opencover.reportsPaths="src/MongoDbMonitorTest/TestResults/*/coverage.opencover.xml"
          /d:sonar.coverage.exclusions="**Test*.cs"

      - name: Set Test Title
        shell: bash
        run: |
           if ${{ github.event_name == 'pull_request' }}
           then
             echo "title=Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})" >> $GITHUB_ENV
             echo "file_name=TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md" >> $GITHUB_ENV
           else
             echo "title=Test Run ${{github.run_number}}" >> $GITHUB_ENV
             echo "file_name=TestReport.${{github.run_number}}.md" >> $GITHUB_ENV
           fi

      - name: Test
        shell: pwsh
        run: >
          dotnet test ./src/Monitor.sln 
          --configuration release 
          --logger:"liquid.md;LogFileName=${{github.workspace}}\${{env.file_name}};Title=${{env.title}};" 
          --collect:"XPlat Code Coverage" 
          --settings ./src/MongoDbMonitorTest/runsettings.xml

      # upload report as build artifact
      - name: Upload as build artifact
        uses: actions/upload-artifact@v2
        if: ${{always()}}
        with:
          name: 'Test Run'
          path: ${{github.workspace}}/${{env.file_name}}

      # add report as PR comment (if PR)
      - name: Comment on PR
        uses: machine-learning-apps/pr-comment@master
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ${{env.file_name}}

      - name: Sonar End
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
